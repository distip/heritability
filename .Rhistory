set.seed(1234)
m <- 1000
n = 2000
out <- c()
for(i in 1:n){
x <- rbinom(n=m , size=1 , prob = 0.5)
a <- runif(n=m)
y<- sum(x*a)
out <- c(out , y)
}
hist(out, breaks=50, col = '#b8860b', main = 'pheotype distribution', xlab = '')
out
head(out)
set.seed(1234)
m <- 1000
n = 2000
out <- c()
for(i in 1:n){
x <- rbinom(n=m , size=1 , prob = 0.5)
a <- runif(n=m)
y<- sum(x*a)
out <- c(y)
}
hist(out, breaks=50, col = '#b8860b', main = 'pheotype distribution', xlab = '')
out
out <- c(out , y)
hist(out, breaks=50, col = '#b8860b', main = 'pheotype distribution', xlab = '')
set.seed(1234)
m <- 1000
n = 2000
out <- c()
for(i in 1:n){
x <- rbinom(n=m , size=1 , prob = 0.5)
a <- runif(n=m)
y<- sum(x*a)
out <- c(out , y)
}
hist(out, breaks=50, col = '#b8860b', main = 'pheotype distribution', xlab = '')
?rbinom
?runif
runif
a
plot(a)
hist(a)
hist(x)
hist(y)
hist(out)
hist(out, breaks=50, col = '#b8860b', main = 'pheotype distribution', xlab = '')
hist(out)
hist(out, breaks=50, col = '#b8860b', main = 'pheotype distribution', xlab = '')
saphiro.test(out)
install.packages('ggpubr')
library(ggpubr)
install.packages('devtools')
library(dplyr)
install.packages('devtools')
install.packages('curl')
library(libcurl)
library(libcurl4)
install.packages('devtools')
install.packages('xml2')
install.packages('devtools')
install.packages('credidentials')
install.packages('credentials')
install.packages('openssl')
install.packages('credentials')
install.packages('ggpubr')
install.packages('devtools')
install.packages('ggpubr')
install.packages('ggpubr')
install.packages('nloptr')
install.packages('libnlopt')
install.packages('ggpubr')
ver(cumake)
version(cmake)
version(cmake)
version(CMake)
ver(CMake)
install.packages('nloptr')
installed.packages('Nlopt')
installed.packages('nlopt')
install.packages('ggpubr')
install.packages('devtools')
library(ggpubr)
library(ggplot2
)
library(ggplot2)
library(ggpubr)
shapiro.test(out)
install.packages('devtools')
install.packages('ggpubr')
library(dplyr)
library(ggpubr)
library(dplyr)
library(ggpubr)
set.seed(1234)
m <- 1000
n = 2000
out <- c()
for(i in 1:n){
x <- rbinom(n=m , size=1 , prob = 0.5)
a <- runif(n=m)
y<- sum(x*a)
out <- c(out , y)
}
hist(out, breaks=50, col = '#b8860b', main = 'pheotype distribution', xlab = '')
shapiro.test(out)
install.packages('FieldSpectra')
install.packages("remotes")
remotes::install_github("serbinsh/R-FieldSpectra")
library(FieldSpectra)
file <- system.file("extdata/PM01_TIAM_B_LC_REFL00005.asd",package="FieldSpectra")
output <- extract.metadata(file,instrument="ASD")
# Spectral Evolution
file <- system.file("extdata/cvars_grape_leaf1_lc_rg_01236.sed",package="FieldSpectra")
output <- extract.metadata(file,instrument="SE")
output
head(file)
file
install.packages('heritability')
data(LDV)
data("LDV")
library(LDV)
library(heritability)
installed.packages('MASS')
library(heritability)
data("LDV")
head(LDV)
data("K_atwell")
head(K_atwell)
out3 <- repeatability(data.vector=LDV$LDV,geno.vector= LDV$genotype,
covariates.frame=as.data.frame(LDV[,3]))
out3
rm(list=ls())
library(tidyr)
library(dplyr)
library(heritability)
library(dplyr)
library(heritability)
library(MASS)
library(tidyr)
library(dplyr)
library(heritability)
data <- read.csv('spectrum.csv')
data <- read.csv('spectrum.csv')
data <- read.csv('spectrum.csv')
data <- read.csv('spectrum.csv')
H <- repeatability(data.vector=data$X750,geno.vector= data$Genotype,
covariates.frame=as.data.frame(data[,2]))
data <- read.csv('spectrum.csv')
H <- repeatability(data.vector=data$X750,geno.vector= data$Genotype,
covariates.frame=as.data.frame(data[,2]))
data <- read.csv('spectrum.csv')
data <- read.csv('spectrum.csv')
getwd()
setwd(./heritability)
setwd("./heritability")
getwd()
library(MASS)
library(tidyr)
library(dplyr)
library(heritability)
data <- read.csv('spectrum.csv')
H_all <- c()
for (i in 4:ncol(data)) {
H <- repeatability(data.vector=data[,i] ,geno.vector= data$Genotype,covariates.frame=as.data.frame(data[,2]))
H_all <- c(H_all, H$repeatability)
}
print(H_all)
type(H_all)
typeof(H_all)
class(H_all)
str(H_all)
write.csv(H_all, file="H_all.csv", row.names = F)
